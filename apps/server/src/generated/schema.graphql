type Query {
  users: [User!]
  userByName(name: String!): User
}

type User {
  name: String!
  email: String!
  phoneNumber: String
}

input UserInput {
  name: String!
  email: String!
  password: String!
  phoneNumber: String
}

input UserInputLogin {
  email: String!
  password: String!
}

type Mutation {
  login(input: UserInputLogin): AuthPayload
  signup(input: UserInput): AuthPayload
  createPayload(input: QrcodeInput): Payload
  authentication(token: String): PayloadAuth
}

input QrcodeInput {
    name: String!
    value: String!
    key: String!
    city: String!
    txtId: String
}  

type AuthPayload {
  token: String
  user: User
}

type Payload {
  payload: String
}

type PayloadAuth {
  id: String
  name: String
  iat: String
  exp: String
  authenticate: Boolean
}